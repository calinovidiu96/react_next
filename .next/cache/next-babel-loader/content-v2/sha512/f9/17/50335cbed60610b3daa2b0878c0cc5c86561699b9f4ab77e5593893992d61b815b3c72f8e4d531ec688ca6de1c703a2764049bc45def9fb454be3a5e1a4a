{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/ovidiu/fisiere/cod/React_app/react_nextjs/pages/index.js\";\nimport { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\nconst DUMMY_MEETUPS = [{\n  id: 'm1',\n  title: 'A First Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Colosseum_in_Rome%2C_Italy_-_April_2007.jpg/2560px-Colosseum_in_Rome%2C_Italy_-_April_2007.jpg',\n  address: 'Some address 1, 12345 Some City',\n  description: 'This is a first meetup!'\n}, {\n  id: 'm2',\n  title: 'A Second Meetup',\n  image: 'https://upload.wikimedia.org/wikipedia/commons/7/79/Westminster_Abbey_by_Canaletto%2C_1749.jpg',\n  address: 'Some address 2, 12345 Some City',\n  description: 'This is a second meetup!'\n}];\n\nfunction HomePage(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupList, {\n    meetups: props.meetups\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n} // export async function getServerSideProps(context) {\n// \tconst req = context.req;\n// \tconst res = context.res;\n// \t//fetch data from an API\n// \treturn {\n// \t\tprops: {\n// \t\t\tmeetups: DUMMY_MEETUPS,\n// \t\t},\n// \t};\n// }\n\n\nexport async function getStaticProps() {\n  // getStaticProps() runs on server-side\n  const client = await MongoClient.connect('mongodb+srv://ovidiu:parolamea@cluster0.ijqyr.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollenction = db.collection('meetups');\n  const meetups = await meetupsCollenction.find().toArray();\n  client.close();\n  return {\n    props: {\n      meetups: meetups.map(meetup => ({\n        title: meetup.title,\n        address: meetup.address,\n        image: meetup.image,\n        id: meetup._id.toString()\n      }))\n    }\n  };\n}\nexport default HomePage;","map":{"version":3,"sources":["/Users/ovidiu/fisiere/cod/React_app/react_nextjs/pages/index.js"],"names":["MongoClient","MeetupList","DUMMY_MEETUPS","id","title","image","address","description","HomePage","props","meetups","getStaticProps","client","connect","db","meetupsCollenction","collection","find","toArray","close","map","meetup","_id","toString"],"mappings":";;AAAA,SAASA,WAAT,QAA4B,SAA5B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;AAEA,MAAMC,aAAa,GAAG,CACrB;AACCC,EAAAA,EAAE,EAAE,IADL;AAECC,EAAAA,KAAK,EAAE,gBAFR;AAGCC,EAAAA,KAAK,EACJ,0JAJF;AAKCC,EAAAA,OAAO,EAAE,iCALV;AAMCC,EAAAA,WAAW,EAAE;AANd,CADqB,EASrB;AACCJ,EAAAA,EAAE,EAAE,IADL;AAECC,EAAAA,KAAK,EAAE,iBAFR;AAGCC,EAAAA,KAAK,EACJ,gGAJF;AAKCC,EAAAA,OAAO,EAAE,iCALV;AAMCC,EAAAA,WAAW,EAAE;AANd,CATqB,CAAtB;;AAmBA,SAASC,QAAT,CAAkBC,KAAlB,EAAyB;AACxB,sBAAO,QAAC,UAAD;AAAY,IAAA,OAAO,EAAEA,KAAK,CAACC;AAA3B;AAAA;AAAA;AAAA;AAAA,UAAP;AACA,C,CAED;AACA;AACA;AAEA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,eAAeC,cAAf,GAAgC;AACtC;AACA,QAAMC,MAAM,GAAG,MAAMZ,WAAW,CAACa,OAAZ,CACpB,+FADoB,CAArB;AAGA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,kBAAkB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA3B;AAEA,QAAMN,OAAO,GAAG,MAAMK,kBAAkB,CAACE,IAAnB,GAA0BC,OAA1B,EAAtB;AAEAN,EAAAA,MAAM,CAACO,KAAP;AAEA,SAAO;AACNV,IAAAA,KAAK,EAAE;AACNC,MAAAA,OAAO,EAAEA,OAAO,CAACU,GAAR,CAAaC,MAAD,KAAa;AACjCjB,QAAAA,KAAK,EAAEiB,MAAM,CAACjB,KADmB;AAEjCE,QAAAA,OAAO,EAAEe,MAAM,CAACf,OAFiB;AAGjCD,QAAAA,KAAK,EAAEgB,MAAM,CAAChB,KAHmB;AAIjCF,QAAAA,EAAE,EAAEkB,MAAM,CAACC,GAAP,CAAWC,QAAX;AAJ6B,OAAb,CAAZ;AADH;AADD,GAAP;AAUA;AAED,eAAef,QAAf","sourcesContent":["import { MongoClient } from 'mongodb';\nimport MeetupList from '../components/meetups/MeetupList';\n\nconst DUMMY_MEETUPS = [\n\t{\n\t\tid: 'm1',\n\t\ttitle: 'A First Meetup',\n\t\timage:\n\t\t\t'https://upload.wikimedia.org/wikipedia/commons/thumb/5/53/Colosseum_in_Rome%2C_Italy_-_April_2007.jpg/2560px-Colosseum_in_Rome%2C_Italy_-_April_2007.jpg',\n\t\taddress: 'Some address 1, 12345 Some City',\n\t\tdescription: 'This is a first meetup!',\n\t},\n\t{\n\t\tid: 'm2',\n\t\ttitle: 'A Second Meetup',\n\t\timage:\n\t\t\t'https://upload.wikimedia.org/wikipedia/commons/7/79/Westminster_Abbey_by_Canaletto%2C_1749.jpg',\n\t\taddress: 'Some address 2, 12345 Some City',\n\t\tdescription: 'This is a second meetup!',\n\t},\n];\n\nfunction HomePage(props) {\n\treturn <MeetupList meetups={props.meetups} />;\n}\n\n// export async function getServerSideProps(context) {\n// \tconst req = context.req;\n// \tconst res = context.res;\n\n// \t//fetch data from an API\n\n// \treturn {\n// \t\tprops: {\n// \t\t\tmeetups: DUMMY_MEETUPS,\n// \t\t},\n// \t};\n// }\n\nexport async function getStaticProps() {\n\t// getStaticProps() runs on server-side\n\tconst client = await MongoClient.connect(\n\t\t'mongodb+srv://ovidiu:parolamea@cluster0.ijqyr.mongodb.net/meetups?retryWrites=true&w=majority'\n\t);\n\tconst db = client.db();\n\n\tconst meetupsCollenction = db.collection('meetups');\n\n\tconst meetups = await meetupsCollenction.find().toArray();\n\n\tclient.close();\n\n\treturn {\n\t\tprops: {\n\t\t\tmeetups: meetups.map((meetup) => ({\n\t\t\t\ttitle: meetup.title,\n\t\t\t\taddress: meetup.address,\n\t\t\t\timage: meetup.image,\n\t\t\t\tid: meetup._id.toString(),\n\t\t\t})),\n\t\t},\n\t};\n}\n\nexport default HomePage;\n"]},"metadata":{},"sourceType":"module"}